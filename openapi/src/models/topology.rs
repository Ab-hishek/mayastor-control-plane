#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types,
    unused_imports
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

use crate::apis::IntoVec;

/// Topology : node and pool topology for volumes

/// node and pool topology for volumes
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Topology {
    #[serde(rename = "node_topology", skip_serializing_if = "Option::is_none")]
    pub node_topology: Option<crate::models::NodeTopology>,
    #[serde(rename = "pool_topology", skip_serializing_if = "Option::is_none")]
    pub pool_topology: Option<crate::models::PoolTopology>,
}

impl Topology {
    /// Topology using only the required fields
    pub fn new() -> Topology {
        Topology {
            node_topology: None,
            pool_topology: None,
        }
    }
    /// Topology using all fields
    pub fn new_all(
        node_topology: impl Into<Option<crate::models::NodeTopology>>,
        pool_topology: impl Into<Option<crate::models::PoolTopology>>,
    ) -> Topology {
        Topology {
            node_topology: node_topology.into(),
            pool_topology: pool_topology.into(),
        }
    }
}
